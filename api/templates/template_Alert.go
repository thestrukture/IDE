// File generated by Gopher Sauce
// DO NOT EDIT!!
package templates

import (
	"log"

	"github.com/thestrukture/IDE/types"
)

// Template path
var templateIDAlert = "tmpl/ui/alert.tmpl"

//
// Renders HTML of template
// Alert with struct types.Alertbs
func Alert(d types.Alertbs) string {
	return netbAlert(d)
}

// Render template with JSON string as
// data.
func netAlert(args ...interface{}) string {

	// Get data from JSON
	var d = netcAlert(args...)
	return netbAlert(d)

}

// template render function
func netbAlert(d types.Alertbs) string {
	localid := templateIDAlert
	name := "Alert"
	defer templateRecovery(name, localid, &d)

	// render and return template result
	return executeTemplate(name, localid, &d)
}

// Unmarshal a json string to the template's struct
// type
func netcAlert(args ...interface{}) (d types.Alertbs) {

	if len(args) > 0 {
		jsonData := args[0].(string)
		err := parseJSON(jsonData, &d)
		if err != nil {
			log.Println("error:", err)
			return
		}
	}

	return
}
