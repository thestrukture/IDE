// File generated by Gopher Sauce
// DO NOT EDIT!!
package templates

import (
	"log"

	"github.com/thestrukture/IDE/types"
)

// Template path
var templateIDRegister = "tmpl/ui/register.tmpl"

//
// Renders HTML of template
// Register with struct types.Dex
func Register(d types.Dex) string {
	return netbRegister(d)
}

// Render template with JSON string as
// data.
func netRegister(args ...interface{}) string {

	// Get data from JSON
	var d = netcRegister(args...)
	return netbRegister(d)

}

// template render function
func netbRegister(d types.Dex) string {
	localid := templateIDRegister
	name := "Register"
	defer templateRecovery(name, localid, &d)

	// render and return template result
	return executeTemplate(name, localid, &d)
}

// Unmarshal a json string to the template's struct
// type
func netcRegister(args ...interface{}) (d types.Dex) {

	if len(args) > 0 {
		jsonData := args[0].(string)
		err := parseJSON(jsonData, &d)
		if err != nil {
			log.Println("error:", err)
			return
		}
	}

	return
}
